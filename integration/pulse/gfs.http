# Rough implementation of the GFS API HTTP exec'r
#
#
@baseUrl = http://192.168.0.160:5000
@machineName = botnode{{$randomInt 1000 10000}}
@machineBootdisk = bootdisk
@machineCores = 4
@machineMemory = 4096
@machineNuma = 0
@machineOstype = l26
@machineSockets = sockets
@architecture = x86_64

###
# @name callGetAllNodesByType
GET {{baseUrl}}/api/v1.0/gfs1/vertex?label=ProxmoxMachineTemplate

###
# @name callGetAllNodes
GET {{baseUrl}}/api/v1.0/gfs1/graph HTTP/1.1
Content-Type: application/json

###
# @name callCreateProxmoxMachine
POST {{baseUrl}}/gfs1/graphql HTTP/1.1
Content-Type: application/json

{"query": "\n            mutation createProxmoxMachine($name:String!, $bootdisk:String!, $cores:String!, $memory:String!, $numa:String!, $ostype:String!, $sockets:String!, $arch:String!) {\n                createProxmoxMachine(name:$name, bootdisk:$bootdisk, cores:$cores, memory:$memory, numa:$numa, ostype:$ostype, sockets:$sockets, arch:$arch) {\n                    instance {\n                        id, name, \n                    },\n                    ok\n                }\n            }\n        ", 
  "variables": {
    "name": "{{machineName}}",
    "bootdisk": "{{machineBootdisk}}",
    "cores": "{{machineCores}}",
    "memory": "{{machineMemory}}",
    "numa": "{{machineNuma}}",
    "ostype": "{{machineOstype}}",
    "sockets": "{{machineSockets}}",
    "arch": "{{architecture}}"
  }
}

###
@GFSID = {{callCreateProxmoxMachine.response.body.$.data.createProxmoxMachine.instance.id}}

###
# @name callLookupGFSISById
GET {{baseUrl}}/api/v1.0/gfs1/context/{{GFSID}} HTTP/1.1
Content-Type: application/json

###
# @name callGetContext
GET {{baseUrl}}/api/v1.0/gfs1/context/{{GFSID}} HTTP/1.1
Content-Type: application/json

###
# @updateMachineName = botnode123
@updateMachineMemory = 8192
@updateMachineCPUs = 1
@updateMachineCores = 1
@updateMachineHT = yes
@updateMachineArch = x86_64

###
# @name callUpdateMachine
POST {{baseUrl}}/gfs1/graphql HTTP/1.1
Content-Type: application/json

{ 
  "query": "\n            mutation updateMachine($id:String, $name:String, $arch:String, $memory:String, $cpus:String, $cores:String, $ht:String) {\n                updateMachine(id:$id, name:$name, arch:$arch, memory:$memory, cpus:$cpus, cores:$cores, ht:$ht) {\n                    instance {\n                        id, name, \n                    },\n                    ok\n                }\n            }\n        ", 
  "variables": {
    "id": "{{GFSID}}", 
    "name": "{{machineName}}",
    "bootdisk": "{{machineBootdisk}}",
    "cores": "{{machineCores}}",
    "memory": "{{machineMemory}}",
    "numa": "{{machineNuma}}",
    "ostype": "{{machineOstype}}",
    "sockets": "{{machineSockets}}",
    "arch": "{{architecture}}"
  }
}

###
# @name callGetContext
GET {{baseUrl}}/api/v1.0/gfs1/context/{{GFSID}} HTTP/1.1
Content-Type: application/json

###
# @name callDelete
DELETE {{baseUrl}}/api/v1.0/gfs1/vertex/{{GFSID}} HTTP/1.1
Content-Type: application/json

### 
POST {{baseUrl}}/api/v1.0/gfs1/edge HTTP/1.1
Content-Type: application/json

{
    "@type": "g:Edge",
    "@value": {
        "label": "CloneOf",
        "inVLabel": None,
        "outVLabel": None,
        "inV": "ProxmoxTemplateType",
        "outV": "ProxmoxMachineType",
        "properties": {}
    }
}